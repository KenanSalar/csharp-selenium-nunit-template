name: Selenium UI Tests with Allure Report

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-in-docker:
    name: Run Tests on ${{ matrix.browser }} in Docker
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [Chrome, Firefox]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file for Docker Compose
        run: |
          echo "SAUCE_DEMO_PASSWORD=${{ secrets.SAUCEDEMO_PASSWORD }}" > .env

      - name: Build and Run Tests via Docker Compose
        run: docker compose run --rm test-runner ${{ matrix.browser }}

      - name: Upload Allure Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: ./SeleniumTraining/bin/Release/net9.0/allure-results
          retention-days: 7
          if-no-files-found: warn

  generate-allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: test-in-docker
    if: always()
    steps:
      - name: Download all Allure results artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./allure-results-downloaded

      - name: Aggregate Allure results
        run: |
          mkdir -p allure-results-final
          find ./allure-results-downloaded -maxdepth 1 -type d -name "allure-results-*" -print0 | while IFS= read -r -d $'\0' artifact_dir; do
            if [ -n "$(ls -A "$artifact_dir" 2>/dev/null)" ]; then
              rsync -av "$artifact_dir/" allure-results-final/
            else
              echo "Artifact directory $artifact_dir is empty."
            fi
          done
          
          if [ -z "$(ls -A allure-results-final)" ]; then
            echo "WARNING: No allure results found after aggregation! Report will be empty."
            echo '{"uuid":"dummy-uuid","testCaseId":"dummy-testCaseId","fullName":"Dummy Test","labels":[{"name":"suite","value":"Dummy Suite"}],"status":"passed","start":1609459200000,"stop":1609459201000}' > allure-results-final/dummy-result.json
            echo "environment.properties" > allure-results-final/environment.properties
          fi

      - name: Allure Report Generation
        uses: simple-elf/allure-report-action@v1.7
        id: allure_report_generation
        with:
          allure_results: allure-results-final
          allure_report: allure-report
          allure_history: allure-history

      - name: Upload Allure HTML report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-html
          path: allure-report
          retention-days: 30

  deploy-allure-report-to-gh-pages:
    name: Deploy Allure Report to GitHub Pages
    runs-on: ubuntu-latest
    needs: generate-allure-report
    if: success() && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ github.server_url }}/${{ github.repository }}/
    permissions:
      contents: write
      pages: write
    steps:
      - name: Download Allure HTML report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report-html
          path: ./report-to-deploy

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report-to-deploy